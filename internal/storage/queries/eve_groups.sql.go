// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: eve_groups.sql

package queries

import (
	"context"
)

const createEveGroup = `-- name: CreateEveGroup :one
INSERT INTO eve_groups (
    id,
    eve_category_id,
    name,
    is_published
)
VALUES (
    ?, ?, ?, ?
)
RETURNING id, eve_category_id, name, is_published
`

type CreateEveGroupParams struct {
	ID            int64
	EveCategoryID int64
	Name          string
	IsPublished   bool
}

func (q *Queries) CreateEveGroup(ctx context.Context, arg CreateEveGroupParams) (EveGroup, error) {
	row := q.db.QueryRowContext(ctx, createEveGroup,
		arg.ID,
		arg.EveCategoryID,
		arg.Name,
		arg.IsPublished,
	)
	var i EveGroup
	err := row.Scan(
		&i.ID,
		&i.EveCategoryID,
		&i.Name,
		&i.IsPublished,
	)
	return i, err
}

const getEveGroup = `-- name: GetEveGroup :one
SELECT id, eve_category_id, name, is_published
FROM eve_groups
WHERE id = ?
`

func (q *Queries) GetEveGroup(ctx context.Context, id int64) (EveGroup, error) {
	row := q.db.QueryRowContext(ctx, getEveGroup, id)
	var i EveGroup
	err := row.Scan(
		&i.ID,
		&i.EveCategoryID,
		&i.Name,
		&i.IsPublished,
	)
	return i, err
}
