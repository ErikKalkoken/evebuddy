// Code generated by ifacemaker; DO NOT EDIT.

package app

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/dialog"
)

// UI ...
type UI interface {
	App() fyne.App
	ClearAllCaches()
	CharacterService() CharacterService
	ESIStatusService() ESIStatusService
	EveImageService() EveImageService
	EveUniverseService() EveUniverseService
	MemCache() CacheService
	StatusCacheService() StatusCacheService
	MainWindow() fyne.Window
	IsDeveloperMode() bool
	IsOffline() bool
	IsStartupCompleted() bool
	// Init initialized the app.
	// It is meant for initialization logic that requires the UI to be fully created.
	// It should be called directly after the UI was created and before the Fyne loop is started.
	Init()
	// ErrorDisplay returns user friendly representation of an error for display in the UI.
	ErrorDisplay(err error) string
	IsDesktop() bool
	IsMobile() bool
	MakeWindowTitle(subTitle string) string
	Settings() Settings
	// ShowAndRun shows the UI and runs the Fyne loop (blocking),
	ShowAndRun()
	// CurrentCharacterID returns the ID of the current character or 0 if non it set.
	CurrentCharacterID() int32
	ShowInformationDialog(title, message string, parent fyne.Window)
	ShowConfirmDialog(title, message, confirm string, callback func(bool), parent fyne.Window)
	NewErrorDialog(message string, err error, parent fyne.Window) dialog.Dialog
	ShowErrorDialog(message string, err error, parent fyne.Window)
	// ModifyShortcutsForDialog modifies the shortcuts for a dialog.
	ModifyShortcutsForDialog(d dialog.Dialog, w fyne.Window)
	ShowLocationInfoWindow(id int64)
	ShowRaceInfoWindow(id int32)
	ShowTypeInfoWindow(id int32)
	ShowEveEntityInfoWindow(o *EveEntity)
	ShowInfoWindow(c EveEntityCategory, id int32)
	ShowSnackbar(text string)
}
