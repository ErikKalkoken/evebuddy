// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: eve_schematics.sql

package queries

import (
	"context"
)

const createEveSchematic = `-- name: CreateEveSchematic :one
INSERT INTO eve_schematics (
    id,
    name,
    cycle_time
)
VALUES (
    ?, ?, ?
)
RETURNING id, name, cycle_time
`

type CreateEveSchematicParams struct {
	ID        int64
	Name      string
	CycleTime int64
}

func (q *Queries) CreateEveSchematic(ctx context.Context, arg CreateEveSchematicParams) (EveSchematic, error) {
	row := q.db.QueryRowContext(ctx, createEveSchematic, arg.ID, arg.Name, arg.CycleTime)
	var i EveSchematic
	err := row.Scan(&i.ID, &i.Name, &i.CycleTime)
	return i, err
}

const getEveSchematic = `-- name: GetEveSchematic :one
SELECT id, name, cycle_time
FROM eve_schematics
WHERE id = ?
`

func (q *Queries) GetEveSchematic(ctx context.Context, id int64) (EveSchematic, error) {
	row := q.db.QueryRowContext(ctx, getEveSchematic, id)
	var i EveSchematic
	err := row.Scan(&i.ID, &i.Name, &i.CycleTime)
	return i, err
}
