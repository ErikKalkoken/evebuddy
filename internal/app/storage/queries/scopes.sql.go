// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: scopes.sql

package queries

import (
	"context"
)

const createScope = `-- name: CreateScope :one
INSERT INTO scopes (
    name
)
VALUES (
    ?
)
RETURNING id, name
`

func (q *Queries) CreateScope(ctx context.Context, name string) (Scope, error) {
	row := q.db.QueryRowContext(ctx, createScope, name)
	var i Scope
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getScope = `-- name: GetScope :one
SELECT id, name
FROM scopes
WHERE name = ?
`

func (q *Queries) GetScope(ctx context.Context, name string) (Scope, error) {
	row := q.db.QueryRowContext(ctx, getScope, name)
	var i Scope
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
