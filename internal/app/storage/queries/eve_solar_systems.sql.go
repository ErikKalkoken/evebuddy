// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: eve_solar_systems.sql

package queries

import (
	"context"
)

const createEveSolarSystem = `-- name: CreateEveSolarSystem :exec
INSERT INTO eve_solar_systems (
    id,
    eve_constellation_id,
    name,
    security_status
)
VALUES (
    ?, ?, ?, ?
)
`

type CreateEveSolarSystemParams struct {
	ID                 int64
	EveConstellationID int64
	Name               string
	SecurityStatus     float64
}

func (q *Queries) CreateEveSolarSystem(ctx context.Context, arg CreateEveSolarSystemParams) error {
	_, err := q.db.ExecContext(ctx, createEveSolarSystem,
		arg.ID,
		arg.EveConstellationID,
		arg.Name,
		arg.SecurityStatus,
	)
	return err
}

const getEveSolarSystem = `-- name: GetEveSolarSystem :one
SELECT eve_solar_systems.id, eve_solar_systems.eve_constellation_id, eve_solar_systems.name, eve_solar_systems.security_status, eve_constellations.id, eve_constellations.eve_region_id, eve_constellations.name, eve_regions.id, eve_regions.description, eve_regions.name
FROM eve_solar_systems
JOIN eve_constellations ON eve_constellations.id = eve_solar_systems.eve_constellation_id
JOIN eve_regions ON eve_regions.id = eve_constellations.eve_region_id
WHERE eve_solar_systems.id = ?
`

type GetEveSolarSystemRow struct {
	EveSolarSystem   EveSolarSystem
	EveConstellation EveConstellation
	EveRegion        EveRegion
}

func (q *Queries) GetEveSolarSystem(ctx context.Context, id int64) (GetEveSolarSystemRow, error) {
	row := q.db.QueryRowContext(ctx, getEveSolarSystem, id)
	var i GetEveSolarSystemRow
	err := row.Scan(
		&i.EveSolarSystem.ID,
		&i.EveSolarSystem.EveConstellationID,
		&i.EveSolarSystem.Name,
		&i.EveSolarSystem.SecurityStatus,
		&i.EveConstellation.ID,
		&i.EveConstellation.EveRegionID,
		&i.EveConstellation.Name,
		&i.EveRegion.ID,
		&i.EveRegion.Description,
		&i.EveRegion.Name,
	)
	return i, err
}
