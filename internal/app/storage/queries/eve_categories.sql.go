// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: eve_categories.sql

package queries

import (
	"context"
)

const createEveCategory = `-- name: CreateEveCategory :one
INSERT INTO eve_categories (
    id,
    name,
    is_published
)
VALUES (
    ?, ?, ?
)
RETURNING id, name, is_published
`

type CreateEveCategoryParams struct {
	ID          int64
	Name        string
	IsPublished bool
}

func (q *Queries) CreateEveCategory(ctx context.Context, arg CreateEveCategoryParams) (EveCategory, error) {
	row := q.db.QueryRowContext(ctx, createEveCategory, arg.ID, arg.Name, arg.IsPublished)
	var i EveCategory
	err := row.Scan(&i.ID, &i.Name, &i.IsPublished)
	return i, err
}

const getEveCategory = `-- name: GetEveCategory :one
SELECT id, name, is_published
FROM eve_categories
WHERE id = ?
`

func (q *Queries) GetEveCategory(ctx context.Context, id int64) (EveCategory, error) {
	row := q.db.QueryRowContext(ctx, getEveCategory, id)
	var i EveCategory
	err := row.Scan(&i.ID, &i.Name, &i.IsPublished)
	return i, err
}
